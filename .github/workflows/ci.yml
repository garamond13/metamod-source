name: Continuous Integration
on: 
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+-dev'
  pull_request:
    branches:
      - master
      - '[0-9]+.[0-9]+-dev'
jobs:
  test:
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_short: windows
            compiler_cc: msvc
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.compiler_cc }}
    env:
      SDKS: '["l4d2"]'
      DEPENDENCIES_FOLDER: dependencies
      DEPENDENCIES_ROOT: ${{ github.workspace }}/dependencies
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          path: metamod-source
      
      - name: Select HL2SDKs
        run: echo 'SDKS=["episode1","tf2","l4d2","cs2","insurgency"]' >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: hl2sdk
        with:
          path: ${{ env.DEPENDENCIES_ROOT }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ join(fromJSON(env.SDKS), '') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      # Setup Python for AMBuild
      - uses: actions/setup-python@v4
        name: Setup Python 3.12
        with:
          python-version: 3.12
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        shell: bash
        run: |
          mkdir -p ${{ env.DEPENDENCIES_FOLDER }}
          cd ${{ env.DEPENDENCIES_FOLDER }}

          # Satisfy checkout-deps requirement for a "metamod-source" folder.
          mkdir -p metamod-source
          ../metamod-source/support/checkout-deps.sh -s ${{ join(fromJSON(env.SDKS)) }}

      - name: Build
        working-directory: metamod-source
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize --sdks=${{ join(fromJSON(env.SDKS)) }} --targets=x86 --hl2sdk-root=${{ env.DEPENDENCIES_ROOT }}
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-l4d2-${{ matrix.os_short }}-${{ env.GITHUB_SHA_SHORT }}
          path: metamod-source/build/package
